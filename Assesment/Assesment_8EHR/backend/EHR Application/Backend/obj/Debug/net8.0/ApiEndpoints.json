[
  {
    "ContainingType": "Backend.Controllers.AppointmentController",
    "Method": "getspecialisation",
    "RelativePath": "api/Appointment",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.AppointmentController",
    "Method": "addAppointment",
    "RelativePath": "api/Appointment/bookAppointment",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "appointments",
        "Type": "Domain.Model.AuthProcessDto.AppointmentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.AppointmentController",
    "Method": "ChangeAppointmentStatus",
    "RelativePath": "api/Appointment/DeleteAppointment/{AppointmentId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "AppointmentId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.AppointmentController",
    "Method": "getPatientByPatientId",
    "RelativePath": "api/Appointment/getAllPatient/{PatientId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "PatientId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.AppointmentController",
    "Method": "getPatientByProviderId",
    "RelativePath": "api/Appointment/getAllPatientByProvider/{PatientId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "PatientId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.AppointmentController",
    "Method": "getProviderById",
    "RelativePath": "api/Appointment/getProvider/{UserTypeId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "UserTypeId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.AppointmentController",
    "Method": "getProviderSpeciality",
    "RelativePath": "api/Appointment/getSpecilisationById/{Id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.AppointmentController",
    "Method": "updatePatientAppointment",
    "RelativePath": "api/Appointment/UpdatePatientAppointment",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updateAppointmentDto",
        "Type": "Domain.Model.AuthProcessDto.UpdateAppointmentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.dropDownController",
    "Method": "GetCountries",
    "RelativePath": "api/dropDown/GetCountries",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.dropDownController",
    "Method": "GetStatesByCountry",
    "RelativePath": "api/dropDown/GetStatesByCountry/{countryId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "countryId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.UserController",
    "Method": "changePassword",
    "RelativePath": "api/User/ChangePassword",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "changePassword",
        "Type": "Domain.Model.AuthProcessDto.ChangePasswordDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.UserController",
    "Method": "forgetPassword",
    "RelativePath": "api/User/forgetPassword",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "Domain.Model.AuthProcessDto.EmailDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.UserController",
    "Method": "getUser",
    "RelativePath": "api/User/getUserById/{Id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.UserController",
    "Method": "Otp",
    "RelativePath": "api/User/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "logins",
        "Type": "Domain.Model.AuthProcessDto.LoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.UserController",
    "Method": "registerProvider",
    "RelativePath": "api/User/RegisterProvider",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "FirstName",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "LastName",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Email",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "DateOfBirth",
        "Type": "System.DateTime",
        "IsRequired": false
      },
      {
        "Name": "ProfileImageUrl",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "Gender",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "BloodGroupId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "Address",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "City",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "StateId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "CountryId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PinCode",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "UserTypeId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "Qualification",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "SpecialisationId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "RegistrationNumber",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "VisitingCharge",
        "Type": "System.Nullable\u00601[[System.Single, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.UserController",
    "Method": "login",
    "RelativePath": "api/User/verifyotp",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "otp",
        "Type": "Domain.Model.AuthProcessDto.OtpDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Backend.WeatherForecast, Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]